use anchor_lang::prelude::*;

#[error_code]
pub enum SwapError {
    // The account cannot be initialized because it is already being used.
    #[msg("Swap account already in use")]
    AlreadyInUse,

    // The program address provided doesn't match the value generated by the program.
    #[msg("Invalid program address generated from bump seed and key")]
    InvalidProgramAddress,

    // The owner of the input isn't set to the program address generated by the program.
    #[msg("Input account owner is not the program address")]
    InvalidOwner,

    // The owner of the pool token output is set to the program address generated by the program.
    #[msg("Output pool account owner cannot be the program address")]
    InvalidOutputOwner,
    
    // The provided token account has a delegate.
    #[msg("Token account has a delegate")]
    InvalidDelegate,
    // The input token is invalid for swap.
    #[msg("InvalidInput")]
    InvalidInput,

    // Address of the provided swap token account is incorrect.
    #[msg("Address of the provided swap token account is incorrect")]
    InvalidTokenAccount,

    // The native account is invalid for swap.
    #[msg("Invalid native account")]
    InvalidNativeAccount,

    // The provided token account has a close authority.
    #[msg("Token account has a close authority")]
    InvalidCloseAuthority,

    // The pool token mint has a freeze authority.
    #[msg("Pool token mint has a freeze authority")]
    InvalidFreezeAuthority,

    // The provided token program does not match the token program expected by the swap
    #[msg("The provided token program does not match the token program expected by the swap")]
    IncorrectTokenProgramId,
}